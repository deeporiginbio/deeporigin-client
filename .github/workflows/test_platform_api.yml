name: Platform API Tests

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        type: choice
        required: true
        default: prod
        options: [edge, staging,prod]
      service:
        description: "Service to test"
        type: choice
        required: true
        default: tools
        options: [tools,file]


jobs:
  test_platform_api:
    name: Test ${{ inputs.service }} API on ${{ inputs.env }}
    # automatically pulls env vars & secrets from the chosen environment
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    env:
      DEEP_ORIGIN_ENV: ${{ inputs.env }}

    
    steps:
      - uses: actions/checkout@v4
      - name: Select API token
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_PROD }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_PROD }}" >> "$GITHUB_ENV"
          elif [ "${{ inputs.env }}" = "staging" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_STAGING }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_STAGING }}" >> "$GITHUB_ENV"
          elif [ "${{ inputs.env }}" = "edge" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_EDGE }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_EDGE }}" >> "$GITHUB_ENV"
          fi

      - name: Set environment variables for Client
        run: |
          echo "DEEPORIGIN_ORG_KEY=deeporigin" >> "$GITHUB_ENV"
          echo "DEEPORIGIN_ENV=${{ inputs.env }}" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: pip install .[tools,test,plots]
      - name: Run tests for ${{ inputs.service }} API
        run: |
          pytest -v -k test_${{ inputs.service }}_api --client "default"

