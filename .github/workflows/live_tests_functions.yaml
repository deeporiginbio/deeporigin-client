name: Test DO Functions on production

on:
  # Allow manual runs
  workflow_dispatch:

  # Run every day
  schedule:
    - cron: "0 6 * * *"

  # Run on changes to Python files in src/functions/
  push:
    paths:
      - 'src/functions/**/*.py'

jobs:
  test-functions-on-production:
    runs-on: ubuntu-latest
    env:
      # Secrets for API and organization
      REFRESH_TOKEN: ${{ secrets.DEEP_ORIGIN_REFRESH_TOKEN }}
      ACCESS_TOKEN: ${{ secrets.DEEP_ORIGIN_ACCESS_TOKEN }}
      DEEP_ORIGIN_ORGANIZATION_ID: ${{ secrets.DEEP_ORIGIN_ORGANIZATION_ID }}
      DEEP_ORIGIN_API_ENDPOINT: ${{ secrets.DEEP_ORIGIN_API_ENDPOINT }}
      DEEP_ORIGIN_NUCLEUS_API_ROUTE: ${{ secrets.DEEP_ORIGIN_NUCLEUS_API_ROUTE }}

    steps:
      - uses: actions/checkout@v4
      - name: Select API token
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_PROD }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_PROD }}" >> "$GITHUB_ENV"
          elif [ "${{ inputs.env }}" = "staging" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_STAGING }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_STAGING }}" >> "$GITHUB_ENV"
          elif [ "${{ inputs.env }}" = "edge" ]; then
            echo "DEEPORIGIN_TOKEN=${{ secrets.DEEPORIGIN_TOKEN_EDGE }}" >> "$GITHUB_ENV"
            echo "DEEPORIGIN_REFRESH_TOKEN=${{ secrets.DEEPORIGIN_REFRESH_TOKEN_EDGE }}" >> "$GITHUB_ENV"
          fi

      - name: Set environment variables for Client
        run: |
          echo "DEEPORIGIN_ORG_KEY=deeporigin" >> "$GITHUB_ENV"
          echo "DEEPORIGIN_ENV=${{ inputs.env }}" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: pip install .[tools,test,plots]


      - name: Run tests against a live instance
        run: uv run pytest  -s --log-cli-level=ERROR --client default -k functions
