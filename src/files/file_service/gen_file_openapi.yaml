
# This is the OpenAPI specification for the File Service API
# Had to make fixes to the original generated file to get it to auto-generate correct stubs
# from this by openapi-python-client.
# Changes:
# - Changed the path of get/put/delete to /file-api/{orgFriendlyId}/{filePath}
# to that it actually passes and argument.
# - Changed upload to use multipart/form-data instead of application/json
# - Made list-type as optional, or else server returns JSON instead of file content
openapi: 3.0.0
paths:
  /file-api/signedUrl/download/{orgFriendlyId}/*:
    get:
      operationId: getSignedUrlDownload
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
  /file-api/signedUrl/upload/{orgFriendlyId}/*:
    get:
      operationId: getSignedUrlUpload
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
  /file-api/{orgFriendlyId}/{filePath}:
    put:
      operationId: putObject
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
        - name: filePath
          required: true
          in: path
          schema:
            type: string
          description: The path to the file (can include subdirectories)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
      responses:
        "200":
          description: "File uploaded successfully"
    head:
      operationId: headObject
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
        - name: filePath
          required: true
          in: path
          schema:
            type: string
          description: The path to the file (can include subdirectories)
      responses:
        "200":
          description: ""
    get:
      operationId: getObject
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
        - name: filePath
          required: true
          in: path
          schema:
            type: string
          description: The path to the file (can include subdirectories)
        - name: list-type
          required: false
          in: query
          schema:
            type: number
      responses:
        "200":
          description: ""
    delete:
      operationId: deleteObject
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
        - name: filePath
          required: true
          in: path
          schema:
            type: string
          description: The path to the file (can include subdirectories)
      responses:
        "200":
          description: ""
    post:
      operationId: syncObjects
      parameters:
        - name: orgFriendlyId
          required: true
          in: path
          schema:
            type: string
        - name: filePath
          required: true
          in: path
          schema:
            type: string
          description: The path to the file (can include subdirectories)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncFileSchemaDto"
      responses:
        "201":
          description: ""
  /file-api/health:
    get:
      operationId: check
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
      tags:
        - health
info:
  title: File Service
  description: ""
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
    api-key:
      type: apiKey
      in: header
      name: Authorization
      description: API Key Authentication
  schemas:
    SyncFileSchemaDto:
      type: object
      properties:
        provider:
          type: string
          enum:
            - S3
          x-enumNames:
            - S3
        credentials:
          type: object
          properties:
            region:
              type: string
            secretKey:
              type: string
            accessKey:
              type: string
          required:
            - region
            - secretKey
            - accessKey
        path:
          type: string
      required:
        - provider
        - credentials
        - path
